"use strict";(self.webpackChunk_11_next=self.webpackChunk_11_next||[]).push([[513],{"./src/app/component/example/loginTesting/login.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{EmptyForm:()=>EmptyForm,FilledForm:()=>FilledForm,FormWithErrors:()=>FormWithErrors,__namedExportsOrder:()=>__namedExportsOrder,default:()=>login_stories});var dist=__webpack_require__("./node_modules/@storybook/test/dist/index.mjs"),jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");const LoginForm=()=>{const[email,setEmail]=(0,react.useState)(""),[password,setPassword]=(0,react.useState)(""),[message,setMessage]=(0,react.useState)(""),[emailError,setEmailError]=(0,react.useState)(""),[passwordError,setPasswordError]=(0,react.useState)("");return(0,jsx_runtime.jsxs)("form",{onSubmit:event=>{event.preventDefault();let valid=!0;setEmailError(""),setPasswordError(""),email||(setEmailError("Email is required."),valid=!1),password||(setPasswordError("Password is required."),valid=!1),valid&&setMessage("Everything is perfect. Your account is ready and we should probably get you started!")},className:"max-w-md mx-auto p-6 border border-gray-300 rounded-lg",children:[(0,jsx_runtime.jsxs)("div",{className:"mb-4",children:[(0,jsx_runtime.jsx)("label",{htmlFor:"email",className:"block text-sm font-medium text-gray-700",children:"Email:"}),(0,jsx_runtime.jsx)("input",{"data-testid":"email",type:"email",id:"email",value:email,onChange:e=>setEmail(e.target.value),className:`mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none sm:text-sm ${emailError?"border-red-500":"border-gray-300"} text-black`}),emailError&&(0,jsx_runtime.jsx)("p",{className:"mt-1 text-sm text-red-600",children:emailError})]}),(0,jsx_runtime.jsxs)("div",{className:"mb-4",children:[(0,jsx_runtime.jsx)("label",{htmlFor:"password",className:"block text-sm font-medium text-gray-700",children:"Password:"}),(0,jsx_runtime.jsx)("input",{"data-testid":"password",type:"password",id:"password",value:password,onChange:e=>setPassword(e.target.value),className:`mt-1 block w-full px-3 py-2 border rounded-md shadow-sm focus:outline-none sm:text-sm ${passwordError?"border-red-500":"border-gray-300"} text-black`}),passwordError&&(0,jsx_runtime.jsx)("p",{className:"mt-1 text-sm text-red-600",children:passwordError})]}),(0,jsx_runtime.jsx)("button",{type:"submit",className:"w-full py-2 px-4 bg-indigo-600 text-white font-medium rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500",children:"Submit"}),message&&(0,jsx_runtime.jsx)("p",{className:"mt-4 text-sm text-green-600",children:message})]})};LoginForm.__docgenInfo={description:"",methods:[],displayName:"LoginForm"};const login_stories={title:"play/login",component:LoginForm},EmptyForm={},FormWithErrors={play:async({canvasElement})=>{const canvas=(0,dist.ux)(canvasElement);await dist.Q4.clear(canvas.getByTestId("email")),await dist.Q4.clear(canvas.getByTestId("password")),await dist.Q4.click(canvas.getByRole("button")),await(0,dist.E3)(canvas.getByText("Email is required.")).toBeInTheDocument(),await(0,dist.E3)(canvas.getByText("Password is required.")).toBeInTheDocument()}},FilledForm={play:async({canvasElement})=>{const canvas=(0,dist.ux)(canvasElement);await dist.Q4.type(canvas.getByTestId("email"),"email@provider.com"),await dist.Q4.type(canvas.getByTestId("password"),"a-random-password"),await dist.Q4.click(canvas.getByRole("button")),await(0,dist.E3)(canvas.getByText("Everything is perfect. Your account is ready and we should probably get you started!")).toBeInTheDocument()}},__namedExportsOrder=["EmptyForm","FormWithErrors","FilledForm"];EmptyForm.parameters={...EmptyForm.parameters,docs:{...EmptyForm.parameters?.docs,source:{originalSource:"{}",...EmptyForm.parameters?.docs?.source}}},FormWithErrors.parameters={...FormWithErrors.parameters,docs:{...FormWithErrors.parameters?.docs,source:{originalSource:"{\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n    await userEvent.clear(canvas.getByTestId('email'));\n    await userEvent.clear(canvas.getByTestId('password'));\n    await userEvent.click(canvas.getByRole('button'));\n\n    // Assert DOM structure for error messages\n    await expect(canvas.getByText('Email is required.')).toBeInTheDocument();\n    await expect(canvas.getByText('Password is required.')).toBeInTheDocument();\n  }\n}",...FormWithErrors.parameters?.docs?.source}}},FilledForm.parameters={...FilledForm.parameters,docs:{...FilledForm.parameters?.docs,source:{originalSource:"{\n  play: async ({\n    canvasElement\n  }) => {\n    const canvas = within(canvasElement);\n\n    // Simulate interactions with the component\n    await userEvent.type(canvas.getByTestId('email'), 'email@provider.com');\n    await userEvent.type(canvas.getByTestId('password'), 'a-random-password');\n    await userEvent.click(canvas.getByRole('button'));\n\n    // Assert DOM structure for success message\n    await expect(canvas.getByText('Everything is perfect. Your account is ready and we should probably get you started!')).toBeInTheDocument();\n  }\n}",...FilledForm.parameters?.docs?.source}}}}}]);