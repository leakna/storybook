"use strict";(self.webpackChunk_11_next=self.webpackChunk_11_next||[]).push([[489],{"./src/app/component/example/mockData/mockData.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{MockedError:()=>MockedError,MockedSuccess:()=>MockedSuccess,__namedExportsOrder:()=>__namedExportsOrder,default:()=>mockData_stories});var http=__webpack_require__("./node_modules/msw/lib/core/http.mjs"),HttpResponse=__webpack_require__("./node_modules/msw/lib/core/HttpResponse.mjs"),delay=__webpack_require__("./node_modules/msw/lib/core/delay.mjs"),jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/next/dist/compiled/react/index.js");function DocumentScreen(){const{status,data}=function useFetchData(){const[status,setStatus]=(0,react.useState)("idle"),[data,setData]=(0,react.useState)([]);return(0,react.useEffect)((()=>{setStatus("loading"),fetch("https://your-restful-endpoint").then((res=>{if(!res.ok)throw new Error(res.statusText);return res})).then((res=>res.json())).then((data=>{setStatus("success"),setData(data)})).catch((()=>{setStatus("error")}))}),[]),{status,data}}(),{user}=data[0];return"loading"===status?(0,jsx_runtime.jsx)("p",{children:"Loading..."}):"error"===status?(0,jsx_runtime.jsx)("p",{children:"There was an error fetching the data!"}):(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children:(0,jsx_runtime.jsx)("p",{children:user.gmail})})}DocumentScreen.__docgenInfo={description:"",methods:[],displayName:"DocumentScreen"};const mockData_stories={title:"request/mockdata",component:DocumentScreen},TestData={user:[{gmail:"leakna@gmail.com",name:"John Doe",age:30,status:"approved"}]},MockedSuccess={parameters:{msw:{handlers:[http.L.get("https://your-restful-endpoint/",(()=>HttpResponse.c.json(TestData)))]}}},MockedError={parameters:{msw:{handlers:[http.L.get("https://your-restful-endpoint",(async()=>(await(0,delay.cb)(800),new HttpResponse.c(null,{status:403}))))]}}},__namedExportsOrder=["MockedSuccess","MockedError"];MockedSuccess.parameters={...MockedSuccess.parameters,docs:{...MockedSuccess.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    msw: {\n      handlers: [http.get('https://your-restful-endpoint/', () => {\n        return HttpResponse.json(TestData);\n      })]\n    }\n  }\n}",...MockedSuccess.parameters?.docs?.source}}},MockedError.parameters={...MockedError.parameters,docs:{...MockedError.parameters?.docs,source:{originalSource:"{\n  parameters: {\n    msw: {\n      handlers: [http.get('https://your-restful-endpoint', async () => {\n        await delay(800);\n        return new HttpResponse(null, {\n          status: 403\n        });\n      })]\n    }\n  }\n}",...MockedError.parameters?.docs?.source}}}}}]);