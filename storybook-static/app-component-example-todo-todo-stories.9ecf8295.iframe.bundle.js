"use strict";(self.webpackChunk_11_next=self.webpackChunk_11_next||[]).push([[889],{"./src/app/component/example/todo/todo.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,__namedExportsOrder:()=>__namedExportsOrder,default:()=>todo_stories});var jsx_runtime=__webpack_require__("./node_modules/next/dist/compiled/react/jsx-runtime.js");__webpack_require__("./node_modules/next/dist/compiled/react/index.js");function cov_1yqqu4vzqa(){var path="D:\\sabaicode\\code\\exercise\\11.next\\src\\app\\component\\example\\todo\\todo.tsx",global=new Function("return this")(),gcv="__coverage__",coverage=global[gcv]||(global[gcv]={});coverage[path]&&"7b30a79485f2f56869c04650a3d528cbea9dd06e"===coverage[path].hash||(coverage[path]={path:"D:\\sabaicode\\code\\exercise\\11.next\\src\\app\\component\\example\\todo\\todo.tsx",statementMap:{0:{start:{line:4,column:24},end:{line:32,column:1}},1:{start:{line:5,column:4},end:{line:31,column:7}},2:{start:{line:33,column:0},end:{line:67,column:2}}},fnMap:{0:{name:"(anonymous_0)",decl:{start:{line:4,column:24},end:{line:4,column:25}},loc:{start:{line:4,column:60},end:{line:32,column:1}},line:4}},branchMap:{0:{loc:{start:{line:27,column:20},end:{line:27,column:58}},type:"cond-expr",locations:[{start:{line:27,column:32},end:{line:27,column:43}},{start:{line:27,column:46},end:{line:27,column:58}}],line:27}},s:{0:0,1:0,2:0},f:{0:0},b:{0:[0,0]},inputSourceMap:{version:3,sources:["D:/sabaicode/code/exercise/11.next/src/app/component/example/todo/todo.tsx"],sourcesContent:["// TodoItem.tsx\r\nimport React from 'react';\r\n\r\ntype TodoItemProps = {\r\n  userId: number;\r\n  id: number;\r\n  title: string;\r\n  completed: boolean;\r\n};\r\n\r\nexport const TodoItem: React.FC<TodoItemProps> = ({ userId, id, title, completed }) => {\r\n  return (\r\n    <div className=\"todo-item\">\r\n      <h2 className=\"text-lg font-bold\">{title}</h2>\r\n      <p>User ID: {userId}</p>\r\n      <p>ID: {id}</p>\r\n      <p>Status: {completed ? 'Completed' : 'Incomplete'}</p>\r\n    </div>\r\n  );\r\n};\r\n"],names:["React","TodoItem","userId","id","title","completed","div","className","h2","p"],mappings:"AAAA,eAAe;;AACf,OAAOA,WAAW,QAAQ;AAS1B,OAAO,MAAMC,WAAoC,CAAC,EAAEC,MAAM,EAAEC,EAAE,EAAEC,KAAK,EAAEC,SAAS,EAAE;IAChF,qBACE,MAACC;QAAIC,WAAU;;0BACb,KAACC;gBAAGD,WAAU;0BAAqBH;;0BACnC,MAACK;;oBAAE;oBAAUP;;;0BACb,MAACO;;oBAAE;oBAAKN;;;0BACR,MAACM;;oBAAE;oBAASJ,YAAY,cAAc;;;;;AAG5C,EAAE"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"7b30a79485f2f56869c04650a3d528cbea9dd06e"});var actualCoverage=coverage[path];return cov_1yqqu4vzqa=function(){return actualCoverage},actualCoverage}cov_1yqqu4vzqa(),cov_1yqqu4vzqa().s[0]++;const TodoItem=({userId,id,title,completed})=>(cov_1yqqu4vzqa().f[0]++,cov_1yqqu4vzqa().s[1]++,(0,jsx_runtime.jsxs)("div",{className:"todo-item",children:[(0,jsx_runtime.jsx)("h2",{className:"text-lg font-bold",children:title}),(0,jsx_runtime.jsxs)("p",{children:["User ID: ",userId]}),(0,jsx_runtime.jsxs)("p",{children:["ID: ",id]}),(0,jsx_runtime.jsxs)("p",{children:["Status: ",completed?(cov_1yqqu4vzqa().b[0][0]++,"Completed"):(cov_1yqqu4vzqa().b[0][1]++,"Incomplete")]})]}));cov_1yqqu4vzqa().s[2]++,TodoItem.__docgenInfo={description:"",methods:[],displayName:"TodoItem",props:{userId:{required:!0,tsType:{name:"number"},description:""},id:{required:!0,tsType:{name:"number"},description:""},title:{required:!0,tsType:{name:"string"},description:""},completed:{required:!0,tsType:{name:"boolean"},description:""}}};const todo_stories={title:"loader/todo",component:TodoItem},Primary={loaders:[async()=>({todo:await(await fetch("https://jsonplaceholder.typicode.com/todos/1")).json()})],render:(args,{loaded:{todo}})=>(0,jsx_runtime.jsx)(TodoItem,{...args,...todo})},__namedExportsOrder=["Primary"];Primary.parameters={...Primary.parameters,docs:{...Primary.parameters?.docs,source:{originalSource:'{\n  loaders: [async () => ({\n    todo: await (await fetch("https://jsonplaceholder.typicode.com/todos/1")).json()\n  })],\n  render: (args, {\n    loaded: {\n      todo\n    }\n  }) => <TodoItem {...args} {...todo} />\n}',...Primary.parameters?.docs?.source}}}}}]);